colnames(combined[,3:5]) <- c("year", "month", "day")
colnames(combined[,c(3:5)]) <- c("year", "month", "day")
typeof(combined)
class(combined)
colnames(combined)[3:5] <- c("year", "month", "day")
colnames(combined)[3] <- "year"
colnames(combined)[4] <- "month"
colnames(combined)[5] <- "day"
head(combined)
colnames(combined)[2:4] <- c("year", "month", "day")
combined$timeline <- (combined$year-2016) + (combined$month-1)*30 + combined$day
combined <- as.data.frame(combined)
combined$timeline <- (combined$year-2016) + (combined$month-1)*30 + combined$day
with(post2015,plot(close, (year-2016) + (month-1)*30 + day))
abline(pred)
abline(combined)
with(post2015,plot(close, timeline)
abline(combined)
with(post2015,plot(close, timeline))
abline(combined)
with(post2015,plot(close, timeline))
abline(combined)
abline(reg)
reg <- lm(close ~ timeline, data=pre2015)
pre2015$timeline <- (pre2015$year-2016) + (pre2015$month-1)*30 + pre2015$day
reg <- lm(close ~ timeline, data=pre2015)
with(post2015,plot(close, timeline))
abline(reg)
analysis <- GOOGL
pre2015 <- subset(GOOGL, year <= 2015)
post2015 <- subset(GOOGL, year > 2015)
reg <- lm(close ~ timeline, data=pre2015)
reg <- lm(close ~ year + month + day, data=pre2015)
summary(reg)
pred <- predict(reg, post2015)
sqrt(mean((log(pred)-log(post2015$close))^2,na.rm=TRUE))
post2015$timeline <- (post2015$year-2016) + (post2015$month-1)*30 + post2015$day
with(post2015, plot(timeline, close))
pre2015 <- subset(GOOGL, year <= 2015)
post2015 <- subset(GOOGL, year > 2015)
rm(analysis, combined, comparison)
reg <- lm(close ~ year, data=pre2015)
pred <- predict(reg, post2015)
sqrt(mean((log(pred)-log(post2015$close))^2,na.rm=TRUE))
reg <- lm(close ~ month, data=pre2015)
pred <- predict(reg, post2015)
sqrt(mean((log(pred)-log(post2015$close))^2,na.rm=TRUE))
reg <- lm(close ~ day, data=pre2015)
pred <- predict(reg, post2015)
sqrt(mean((log(pred)-log(post2015$close))^2,na.rm=TRUE))
reg <- lm(close ~ year + month + day, data=pre2015)
sqrt(mean((log(pred)-log(post2015$close))^2,na.rm=TRUE))
pred <- predict(reg, post2015)
sqrt(mean((log(pred)-log(post2015$close))^2,na.rm=TRUE))
pre2015$timeline <- (pre2015$year-2016) + (pre2015$month-1)*30 + pre2015$day
with(pre2015, plot(timeline, close))
pre2015$timeline <- (pre2015$year-2004) + (pre2015$month-1)*30 + pre2015$day
with(pre2015, plot(timeline, close))
gpplot(pre2015, plot(timeline, close))
gpplot(pre2015, aes(timeline, close))
library(ggplot2)
gpplot(pre2015, aes(timeline, close))
ggplot(pre2015, aes(timeline, close))
pre2015$timeline <- (pre2015$year-2004) + (pre2015$month-1)*30 + pre2015$day
ggplot(pre2015, aes(timeline, close))
ggplot(data=pre2015, aes(timeline, close))
ggplot(data=pre2015, aes(timeline, close)) + geom_point()
pre2015$timeline <- (pre2015$year-2004)*365 + (pre2015$month-1)*30 + pre2015$day
ggplot(data=pre2015, aes(timeline, close)) + geom_point()
post2015$timeline <- (post2015$year-2016)*365 + (post2015$month-1)*30 + post2015$day
ggplot(data=post2015, aes(timeline, close)) + geom_point()
comparison <- cbind(post2015$close, pred)
combined <- cbind(pred, post2015$year, post2015$month, post2015$day)
colnames(combined)[2:4] <- c("year", "month", "day")
combined <- as.data.frame(combined)
combined <- cbind(post2015,combined)
head(combined)
ggplot(data=post2015) + geom_point(aes(timeline,close),fill="red") + + geom_point(aes(timeline,pred),fill="blue")
ggplot(data=post2015) + geom_point(aes(timeline,close),fill="red") + geom_point(aes(timeline,pred),fill="blue")
ggplot(data=post2015) + geom_point(aes(timeline,close),color="red") + geom_point(aes(timeline,pred),fill="blue")
ggplot(data=post2015) + geom_point(aes(timeline,close),color="red") + geom_point(aes(timeline,pred),color="blue")
reg <- lm(close ~ timeline, data=pre2015)
pred <- predict(reg, post2015)
sqrt(mean((log(pred)-log(post2015$close))^2,na.rm=TRUE))
comparison <- cbind(post2015$close, pred)
combined <- cbind(pred, post2015$year, post2015$month, post2015$day)
colnames(combined)[2:4] <- c("year", "month", "day")
combined <- as.data.frame(combined)
combined <- cbind(post2015,combined)
library(ggplot2)
ggplot(data=post2015) + geom_point(aes(timeline,close),color="red") + geom_point(aes(timeline,pred),color="blue")
pre2015 <- subset(GOOGL, year <= 2015)
post2015 <- subset(GOOGL, year > 2015)
reg <- lm(close ~ year + month + day, data=pre2015)
pred <- predict(reg, post2015)
sqrt(mean((log(pred)-log(post2015$close))^2,na.rm=TRUE))
pre2015$timeline <- (pre2015$year-2004)*365 + (pre2015$month-1)*31 + pre2015$day
post2015$timeline <- (post2015$year-2016)*365 + (post2015$month-1)*31 + post2015$day
comparison <- cbind(post2015$close, pred)
combined <- cbind(pred, post2015$year, post2015$month, post2015$day)
colnames(combined)[2:4] <- c("year", "month", "day")
combined <- as.data.frame(combined)
combined <- cbind(post2015,combined)
ggplot(data=post2015) + geom_point(aes(timeline,close),color="red") + geom_point(aes(timeline,pred),color="blue")
reg <- lm(close ~ year, data=pre2015)
pred <- predict(reg, post2015)
sqrt(mean((log(pred)-log(post2015$close))^2,na.rm=TRUE))
comparison <- cbind(post2015$close, pred)
combined <- cbind(pred, post2015$year, post2015$month, post2015$day)
colnames(combined)[2:4] <- c("year", "month", "day")
combined <- as.data.frame(combined)
combined <- cbind(post2015,combined)
ggplot(data=post2015) + geom_point(aes(timeline,close),color="red") + geom_point(aes(timeline,pred),color="blue")
reg <- lm(close ~ year + month + day, data=pre2015)
pred <- predict(reg, post2015)
sqrt(mean((log(pred)-log(post2015$close))^2,na.rm=TRUE))
comparison <- cbind(post2015$close, pred)
combined <- cbind(pred, post2015$year, post2015$month, post2015$day)
colnames(combined)[2:4] <- c("year", "month", "day")
combined <- as.data.frame(combined)
combined <- cbind(post2015,combined)
library(ggplot2)
ggplot(data=post2015) + geom_point(aes(timeline,close),color="red") + geom_point(aes(timeline,pred),color="blue")
setwed("Desktop")
setwd("Desktop")
setwd("Programming")
setwd("HACKATHON")
setwd("HackPrinceton2017sp")
setwd("Data")
GOOGL <- read.csv("GOOGL.csv")
set.seed(42)
library(randomForest)
library(dplyr)
library(ggplot2)
train <- GOOGL[,-c(1,17)] # exclude row numbers and Id
rf <- randomForest(change ~ ., data=train)
set <- data_frame(feature=setdiff(colnames(train), "delta"),
importance=as.vector(importance(rf)))
set <- arrange(set, desc(importance))
set$feature <- factor(set$feature, levels=set$feature)
p <- ggplot(set, aes(x=feature, weight=importance, fill=feature))
p <- p + geom_bar() + ggtitle("Feature by Influence")
p <- p + xlab("GOOGL Stock Features") + ylab("Feature Importance")
p <- p + scale_fill_discrete(name="Features")
p <- p + theme(axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.title=element_text(size=15),
plot.title=element_text(size=20),
legend.title=element_text(size=17),
legend.text=element_text(size=10),
panel.background = element_rect(fill = "grey90"))
p
GOOGL <- read.csv("GOOGL.csv")
GOOGL$date <- as.POSIXct(strptime(GOOGL$date, '%Y-%m-%d',tz='GMT'))
pre2015 <- subset(GOOGL, year <= 2015)
post2015 <- subset(GOOGL, year > 2015)
lm <- lm(change ~ open + close + adj_close + adj_open,
data = pre2015)
pred <- predict(lm, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted1 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/62);
post2015$predicted1[i+1] <- cur_close;
}
cur_close <- post2015$close[1]
post2015$predicted2 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/41);
post2015$predicted2[i+1] <- cur_close;
}
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
logit <- glm(change ~ open + close + adj_open + adj_close,
data = pre2015,
family = binomial())
pred <- predict(logit, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted3 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/122);
post2015$predicted3[i+1] <- cur_close;
}
cur_close <- post2015$close[1]
post2015$predicted4 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/59);
post2015$predicted4[i+1] <- cur_close;
}
post2015$predicted <- (post2015$predicted1 +
post2015$predicted2 +
post2015$predicted3 +
post2015$predicted4) / 4;
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
gg_plot <- ggplot(data=post2015) +
geom_line(aes(date,open,color="open")) +
geom_line(aes(date,high,color="high")) +
geom_line(aes(date,low,color="low")) +
geom_line(aes(date,close,color="close")) +
geom_line(aes(date,predicted,color="prediction")) +
scale_colour_manual(name="Line Color",
values=c(open="green",
high="darkorchid1",
low="darkorchid4",
close="red",
prediction="cyan3")) +
scale_x_datetime(date_labels="%m-%d-%y", date_breaks = "3 months")
gg_plot <- gg_plot + ggtitle("GOOGL Stock Prediction 2016-17") +
ylab("stock prices") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_line(colour = "grey50", linetype = "dotted"),
legend.position = "right",
legend.title = element_blank(),
legend.key = element_rect(fill = "black"))
gg_plot
IBM <- read.csv("IBM.csv")
IBM$date <- as.POSIXct(strptime(IBM$date, '%Y-%m-%d',tz='GMT'))
pre2015 <- subset(IBM, year <= 2015 && year > 1978)
post2015 <- subset(IBM, year > 2015)
lm <- lm(change ~ open + close + adj_close + adj_open,
data = pre2015)
pred <- predict(lm, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted1 <- cur_close
IBM <- read.csv("IBM.csv")
IBM$date <- as.POSIXct(strptime(IBM$date, '%Y-%m-%d',tz='GMT'))
pre2015 <- subset(IBM, year <= 2015 && year > 1978)
post2015 <- subset(IBM, year > 2015)
lm <- lm(change ~ open + close + adj_close + adj_open,
data = pre2015)
pred <- predict(lm, newdata = post2015, type="response")
IBM <- read.csv("IBM.csv")
IBM$date <- as.POSIXct(strptime(IBM$date, '%Y-%m-%d',tz='GMT'))
pre2015 <- subset(IBM, year <= 2015)
post2015 <- subset(IBM, year > 2015)
lm <- lm(change ~ open + close + adj_close + adj_open,
data = pre2015)
pred <- predict(lm, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted1 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/36);
post2015$predicted1[i+1] <- cur_close;
}
cur_close <- post2015$close[1]
post2015$predicted2 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/42);
post2015$predicted2[i+1] <- cur_close;
}
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
logit <- glm(change ~ open + close + adj_open + adj_close,
data = pre2015,
family = binomial())
pred <- predict(logit, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted3 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/33);
post2015$predicted3[i+1] <- cur_close;
}
cur_close <- post2015$close[1]
post2015$predicted4 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/47);
post2015$predicted4[i+1] <- cur_close;
}
post2015$predicted <- (post2015$predicted1 +
post2015$predicted2 +
post2015$predicted3 +
post2015$predicted4) / 4;
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
gg_plot <- ggplot(data=post2015) +
geom_line(aes(date,open,color="open")) +
geom_line(aes(date,high,color="high")) +
geom_line(aes(date,low,color="low")) +
geom_line(aes(date,close,color="close")) +
geom_line(aes(date,predicted,color="prediction")) +
scale_colour_manual(name="Line Color",
values=c(open="green",
high="darkorchid1",
low="darkorchid4",
close="red",
prediction="cyan3")) +
scale_x_datetime(date_labels="%m-%d-%y", date_breaks = "3 months")
gg_plot <- gg_plot + ggtitle("IBM Stock Prediction 2016-17") +
ylab("stock prices") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_line(colour = "grey50", linetype = "dotted"),
legend.position = "right",
legend.title = element_blank(),
legend.key = element_rect(fill = "black"))
gg_plot
HON <- read.csv("HON.csv")
HON$date <- as.POSIXct(strptime(HON$date, '%Y-%m-%d',tz='GMT'))
pre2015 <- subset(HON, year <= 2015)
post2015 <- subset(HON, year > 2015)
lm <- lm(change ~ open + close + adj_close + adj_open,
data = pre2015)
pred <- predict(lm, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted1 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/68);
post2015$predicted1[i+1] <- cur_close;
}
cur_close <- post2015$close[1]
post2015$predicted2 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/51);
post2015$predicted2[i+1] <- cur_close;
}
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
logit <- glm(change ~ open + close + adj_open + adj_close,
data = pre2015,
family = binomial())
pred <- predict(logit, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted3 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/48);
post2015$predicted3[i+1] <- cur_close;
}
cur_close <- post2015$close[1]
post2015$predicted4 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/57);
post2015$predicted4[i+1] <- cur_close;
}
post2015$predicted <- (post2015$predicted1 +
post2015$predicted2 +
post2015$predicted3 +
post2015$predicted4) / 4;
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
gg_plot <- ggplot(data=post2015) +
geom_line(aes(date,open,color="open")) +
geom_line(aes(date,high,color="high")) +
geom_line(aes(date,low,color="low")) +
geom_line(aes(date,close,color="close")) +
geom_line(aes(date,predicted,color="prediction")) +
scale_colour_manual(name="Line Color",
values=c(open="green",
high="darkorchid1",
low="darkorchid4",
close="red",
prediction="cyan3")) +
scale_x_datetime(date_labels="%m-%d-%y", date_breaks = "3 months")
gg_plot <- gg_plot + ggtitle("HON Stock Prediction 2016-17") +
ylab("stock prices") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_line(colour = "grey50", linetype = "dotted"),
legend.position = "right",
legend.title = element_blank(),
legend.key = element_rect(fill = "black"))
gg_plot
AMZN <- read.csv("AMZN.csv")
AMZN$date <- as.POSIXct(strptime(AMZN$date, '%Y-%m-%d',tz='GMT'))
pre2015 <- subset(AMZN, year <= 2015)
post2015 <- subset(AMZN, year > 2015)
lm <- lm(change ~ open + close + adj_close + adj_open,
data = pre2015)
pred <- predict(lm, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted1 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/58);
post2015$predicted1[i+1] <- cur_close;
}
cur_close <- post2015$close[1]
post2015$predicted2 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/67);
post2015$predicted2[i+1] <- cur_close;
}
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
logit <- glm(change ~ open + close + adj_open + adj_close,
data = pre2015,
family = binomial())
pred <- predict(logit, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted3 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/28);
post2015$predicted3[i+1] <- cur_close;
}
cur_close <- post2015$close[1]
post2015$predicted4 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/57);
post2015$predicted4[i+1] <- cur_close;
}
post2015$predicted <- (post2015$predicted1 +
post2015$predicted2 +
post2015$predicted3 +
post2015$predicted4) / 4;
post2015$predicted <- post2015$predicted1
gg_plot <- ggplot(data=post2015) +
geom_line(aes(date,open,color="open")) +
geom_line(aes(date,high,color="high")) +
geom_line(aes(date,low,color="low")) +
geom_line(aes(date,close,color="close")) +
geom_line(aes(date,predicted,color="prediction")) +
scale_colour_manual(name="Line Color",
values=c(open="green",
high="darkorchid1",
low="darkorchid4",
close="red",
prediction="cyan3")) +
scale_x_datetime(date_labels="%m-%d-%y", date_breaks = "3 months")
gg_plot <- gg_plot + ggtitle("AMZN Stock Prediction 2016-17") +
ylab("stock prices") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_line(colour = "grey50", linetype = "dotted"),
legend.position = "right",
legend.title = element_blank(),
legend.key = element_rect(fill = "black"))
gg_plot
COF <- read.csv("COF.csv")
COF$date <- as.POSIXct(strptime(COF$date, '%Y-%m-%d',tz='GMT'))
pre2015 <- subset(COF, year <= 2015)
post2015 <- subset(COF, year > 2015)
lm <- lm(change ~ open + close + adj_close + adj_open,
data = pre2015)
pred <- predict(lm, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted1 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/58);
post2015$predicted1[i+1] <- cur_close;
}
cur_close <- post2015$close[1]
post2015$predicted2 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/32);
post2015$predicted2[i+1] <- cur_close;
}
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
logit <- glm(change ~ open + close + adj_open + adj_close,
data = pre2015,
family = binomial())
pred <- predict(logit, newdata = post2015, type="response")
post2015$pred <- pred
cur_close <- post2015$close[1]
post2015$predicted3 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/79);
post2015$predicted3[i+1] <- cur_close;
}
cur_close <- post2015$close[1]
post2015$predicted4 <- cur_close
for (i in c(1:(nrow(post2015)-1))) {
cur_close <- cur_close * (1 + (post2015$pred[i]-0.5)/39);
post2015$predicted4[i+1] <- cur_close;
}
post2015$predicted <- (post2015$predicted1 +
post2015$predicted2 +
post2015$predicted3 +
post2015$predicted4) / 4;
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
post2015$predicted <- (post2015$predicted1 +
post2015$predicted2) / 2;
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
post2015$predicted <- (post2015$predicted1 +
post2015$predicted2 +
post2015$predicted3 +
post2015$predicted4) / 4;
sqrt(mean((log(post2015$predicted+1)-log(post2015$close+1))^2,na.rm=TRUE))
gg_plot <- ggplot(data=post2015) +
geom_line(aes(date,open,color="open")) +
geom_line(aes(date,high,color="high")) +
geom_line(aes(date,low,color="low")) +
geom_line(aes(date,close,color="close")) +
geom_line(aes(date,predicted,color="prediction")) +
scale_colour_manual(name="Line Color",
values=c(open="green",
high="darkorchid1",
low="darkorchid4",
close="red",
prediction="cyan3")) +
scale_x_datetime(date_labels="%m-%d-%y", date_breaks = "3 months")
gg_plot <- gg_plot + ggtitle("COF Stock Prediction 2016-17") +
ylab("stock prices") +
theme(plot.title = element_text(hjust = 0.5, size = 15),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_line(colour = "grey50", linetype = "dotted"),
legend.position = "right",
legend.title = element_blank(),
legend.key = element_rect(fill = "black"))
gg_plot
